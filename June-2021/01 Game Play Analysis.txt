LeetCode# 511

select player_id, min(event_date) as first_login
from activity
group by player_id


LeetCode# 512

with temp_cte as (
    select player_id, min(event_date) as first_login
    from activity
    group by player_id
)
select tc.player_id, device_id
from temp_cte tc
join activity
on tc.player_id = activity.player_id
where tc.first_login = activity.event_date


LeetCode# 534

select player_id, event_date, sum(games_played) over (partition by player_id order by event_date rows between unbounded preceding and current row) as games_played_so_far 
from activity


LeetCode# 550

with temp_cte as (
    select count(distinct player_id) as total_players
    from activity
),
temp_cte2 as (    
    select player_id, event_date, 
          lead(event_date) over (partition by player_id order by event_date) as new_event_date,
          dense_rank() over (partition by player_id order by event_date) as rnk
    from activity
)
select round(sum(case when datediff(tc2.new_event_date,event_date) = 1
                 then 1
                 else 0
                 end)/tc.total_players, 2) as fraction
from temp_cte tc,
temp_cte2 tc2
where tc2.rnk = 1


LeetCode# 569

with temp_cte as (
    select *,
    row_number() over (partition by company order by salary) as rn,
    count(1) over (partition by company) as cnt
    from employee
)
select id, company, salary
from temp_cte
where (
    (cnt%2 = 1 and rn = floor(cnt/2)+1)
    or
    (cnt%2 = 0 and rn in (floor(cnt/2), floor(cnt/2)+1))
)
